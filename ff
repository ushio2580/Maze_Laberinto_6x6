{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ushio2580/Gradient2/blob/main/6x6Maze.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# version 2"
      ],
      "metadata": {
        "id": "lRJiYQ0gSR0z"
      },
      "id": "lRJiYQ0gSR0z"
    },
    {
      "cell_type": "code",
      "source": [
        "# Import necessary libraries\n",
        "import gym\n",
        "from gym import spaces\n",
        "import numpy as np\n",
        "import tensorflow as tf\n",
        "from collections import deque\n",
        "import random\n",
        "import matplotlib.pyplot as plt\n",
        "import argparse\n",
        "from tensorflow.keras import mixed_precision\n",
        "mixed_precision.set_global_policy('mixed_float16')\n",
        "\n",
        "# Check GPU availability\n",
        "print(\"Num GPUs Available: \", len(tf.config.list_physical_devices('GPU')))\n",
        "\n",
        "# Define the maze environment\n",
        "class MazeEnv(gym.Env):\n",
        "    def __init__(self):\n",
        "        super(MazeEnv, self).__init__()\n",
        "        # 6x6 maze: 0=free space, 1=wall, 2=start, 3=goal\n",
        "        self.maze = np.array([\n",
        "            [2, 0, 0, 0, 0, 0],\n",
        "            [1, 1, 0, 1, 1, 0],\n",
        "            [0, 0, 0, 0, 0, 0],\n",
        "            [0, 1, 1, 1, 0, 1],\n",
        "            [0, 0, 0, 0, 0, 0],\n",
        "            [0, 1, 0, 1, 1, 3]\n",
        "        ])\n",
        "        self.start_pos = (0, 0)  # Starting position\n",
        "        self.end_pos = (5, 5)    # Goal position\n",
        "        self.agent_pos = self.start_pos\n",
        "        self.max_steps = 100     # Max steps per episode\n",
        "        self.current_step = 0\n",
        "        self.action_space = spaces.Discrete(4)  # Actions: 0=up, 1=right, 2=down, 3=left\n",
        "        self.observation_space = spaces.Tuple((spaces.Discrete(6), spaces.Discrete(6)))\n",
        "\n",
        "    def reset(self):\n",
        "        \"\"\"Reset the environment to the initial state.\"\"\"\n",
        "        self.agent_pos = self.start_pos\n",
        "        self.current_step = 0\n",
        "        return self.agent_pos\n",
        "\n",
        "    def step(self, action):\n",
        "        \"\"\"Take a step in the environment based on the action.\"\"\"\n",
        "        self.current_step += 1\n",
        "        row, col = self.agent_pos\n",
        "        # Define possible movements\n",
        "        if action == 0 and row > 0:      # Up\n",
        "            new_pos = (row - 1, col)\n",
        "        elif action == 1 and col < 5:    # Right\n",
        "            new_pos = (row, col + 1)\n",
        "        elif action == 2 and row < 5:    # Down\n",
        "            new_pos = (row + 1, col)\n",
        "        elif action == 3 and col > 0:    # Left\n",
        "            new_pos = (row, col - 1)\n",
        "        else:\n",
        "            new_pos = self.agent_pos  # Invalid move, no position change\n",
        "\n",
        "        # Check if the move is valid (not a wall)\n",
        "        if self.maze[new_pos] != 1:\n",
        "            self.agent_pos = new_pos\n",
        "\n",
        "        # Determine reward and done status\n",
        "        if self.agent_pos == self.end_pos:\n",
        "            reward = 1.0\n",
        "            done = True\n",
        "        elif self.current_step >= self.max_steps:\n",
        "            reward = -0.1\n",
        "            done = True\n",
        "        else:\n",
        "            reward = -0.1\n",
        "            done = False\n",
        "        return self.agent_pos, reward, done, {}\n",
        "\n",
        "# Define the DQN agent\n",
        "class DQNAgent:\n",
        "    def __init__(self, state_size=2, action_size=4):\n",
        "        self.state_size = state_size\n",
        "        self.action_size = action_size\n",
        "        self.memory = deque(maxlen=5000)  # Increase memory capacity\n",
        "        self.gamma = 0.95\n",
        "        self.epsilon = 1.0\n",
        "        self.epsilon_min = 0.1           # Higher minimum epsilon\n",
        "        self.epsilon_decay = 0.999       # Slower decay\n",
        "        self.learning_rate = 0.01        # Higher learning rate\n",
        "        self.model = self._build_model()\n",
        "        self.target_model = self._build_model()\n",
        "        self.update_target_model()\n",
        "\n",
        "    def _build_model(self):\n",
        "        \"\"\"Build a larger neural network.\"\"\"\n",
        "        model = tf.keras.Sequential([\n",
        "            tf.keras.layers.Dense(64, input_dim=self.state_size, activation='relu'),  # Larger layer\n",
        "            tf.keras.layers.Dense(64, activation='relu'),                            # Larger layer\n",
        "            tf.keras.layers.Dense(self.action_size, activation='linear', dtype='float32')\n",
        "        ])\n",
        "        model.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=self.learning_rate), loss='mse')\n",
        "        return model\n",
        "\n",
        "    def update_target_model(self):\n",
        "        \"\"\"Update the target model's weights.\"\"\"\n",
        "        self.target_model.set_weights(self.model.get_weights())\n",
        "\n",
        "    def remember(self, state, action, reward, next_state, done):\n",
        "        \"\"\"Store an experience in memory.\"\"\"\n",
        "        self.memory.append((state, action, reward, next_state, done))\n",
        "\n",
        "    def act(self, state):\n",
        "        \"\"\"Choose an action based on exploration or exploitation.\"\"\"\n",
        "        if np.random.rand() <= self.epsilon:\n",
        "            return random.randrange(self.action_size)  # Exploration\n",
        "        state = np.array(state).reshape(1, -1)\n",
        "        act_values = self.model.predict(state, verbose=0)\n",
        "        return np.argmax(act_values[0])  # Exploitation\n",
        "\n",
        "    def replay(self, batch_size):\n",
        "        \"\"\"Train the model with a sample from memory.\"\"\"\n",
        "        if len(self.memory) < batch_size:\n",
        "            return\n",
        "        minibatch = random.sample(self.memory, batch_size)\n",
        "        states = np.array([t[0] for t in minibatch])\n",
        "        next_states = np.array([t[3] for t in minibatch])\n",
        "        targets = self.model.predict(states, verbose=0)\n",
        "        next_q_values = self.target_model.predict(next_states, verbose=0)\n",
        "        for i, (state, action, reward, next_state, done) in enumerate(minibatch):\n",
        "            target = reward if done else reward + self.gamma * np.max(next_q_values[i])\n",
        "            targets[i][action] = target\n",
        "        self.model.fit(states, targets, epochs=1, verbose=0)\n",
        "        if self.epsilon > self.epsilon_min:\n",
        "            self.epsilon *= self.epsilon_decay\n",
        "\n",
        "    def save(self, path):\n",
        "        \"\"\"Save the model's weights.\"\"\"\n",
        "        self.model.save_weights(path)\n",
        "\n",
        "    def load(self, path):\n",
        "        \"\"\"Load the model's weights.\"\"\"\n",
        "        self.model.load_weights(path)\n",
        "        self.target_model.load_weights(path)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nIcLdszwSG3U",
        "outputId": "4f07b03b-2ef1-4e68-89c9-ddf843dd5b26"
      },
      "id": "nIcLdszwSG3U",
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Num GPUs Available:  1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Training function\n",
        "def train_dqn(episodes=500, batch_size=64, model_path='dqn_model.weights.h5'):\n",
        "    \"\"\"Train the DQN agent and save the model.\"\"\"\n",
        "    env = MazeEnv()\n",
        "    agent = DQNAgent()\n",
        "    rewards = []\n",
        "\n",
        "    for episode in range(episodes):\n",
        "        state = env.reset()\n",
        "        done = False\n",
        "        total_reward = 0\n",
        "        while not done:\n",
        "            action = agent.act(state)\n",
        "            next_state, reward, done, _ = env.step(action)\n",
        "            agent.remember(state, action, reward, next_state, done)\n",
        "            state = next_state\n",
        "            total_reward += reward\n",
        "            if len(agent.memory) > batch_size:\n",
        "                agent.replay(batch_size)\n",
        "        rewards.append(total_reward)\n",
        "        if episode % 5 == 0:\n",
        "            agent.update_target_model()\n",
        "        print(f\"Episode {episode+1}/{episodes}, Reward: {total_reward:.2f}, Epsilon: {agent.epsilon:.3f}\")\n",
        "\n",
        "    agent.save(model_path)\n",
        "    # Visualize training progress\n",
        "    plt.plot(rewards)\n",
        "    plt.xlabel('Episode')\n",
        "    plt.ylabel('Total Reward')\n",
        "    plt.title('Training Progress')\n",
        "    plt.show()\n",
        "    return rewards\n",
        "\n",
        "# Evaluation function with enhanced visualization\n",
        "def evaluate_dqn(model_path='dqn_model.weights.h5'):\n",
        "    \"\"\"Evaluate the DQN agent and display the path taken.\"\"\"\n",
        "    env = MazeEnv()\n",
        "    agent = DQNAgent()\n",
        "    agent.load(model_path)\n",
        "    agent.epsilon = 0  # Disable exploration during evaluation\n",
        "\n",
        "    for episode in range(10):\n",
        "        state = env.reset()\n",
        "        path = [state]\n",
        "        total_reward = 0\n",
        "        done = False\n",
        "        while not done:\n",
        "            action = agent.act(state)\n",
        "            next_state, reward, done, _ = env.step(action)\n",
        "            path.append(next_state)\n",
        "            total_reward += reward\n",
        "            state = next_state\n",
        "\n",
        "        # Enhanced path visualization\n",
        "        fig, ax = plt.subplots(figsize=(6, 6))\n",
        "        # Use a colormap to distinguish maze elements\n",
        "        cmap = plt.cm.get_cmap('gray', 4)\n",
        "        ax.imshow(env.maze, cmap=cmap, vmin=0, vmax=3)\n",
        "        # Draw arrows to show the path direction\n",
        "        for i in range(len(path) - 1):\n",
        "            ax.annotate('', xy=(path[i+1][1], path[i+1][0]), xytext=(path[i][1], path[i][0]),\n",
        "                        arrowprops=dict(arrowstyle='->', color='blue'))\n",
        "        # Mark start and end positions\n",
        "        ax.plot(path[0][1], path[0][0], 'go', markersize=10, label='Start')\n",
        "        ax.plot(path[-1][1], path[-1][0], 'ro', markersize=10, label='Goal')\n",
        "        ax.legend(loc='upper right')\n",
        "        plt.title(f\"Episode {episode+1}\")\n",
        "        plt.show()\n",
        "\n",
        "        print(f\"\\nEpisode {episode+1}:\")\n",
        "        print(f\"Path: {path}\")\n",
        "        print(f\"Path Length: {len(path)}\")\n",
        "        print(f\"Total Reward: {total_reward:.2f}\")"
      ],
      "metadata": {
        "id": "MjHDCKlOSJ8N"
      },
      "id": "MjHDCKlOSJ8N",
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Training the agent...\")\n",
        "train_dqn(episodes=500, batch_size=64, model_path='dqn_model.weights.h5')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "VCk2qH9cSMQz",
        "outputId": "1e3aa733-2297-4fdb-b40e-17d455b9c807"
      },
      "id": "VCk2qH9cSMQz",
      "execution_count": 3,
      "outputs": [
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Training the agent...\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n",
            "  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Episode 1/500, Reward: -8.40, Epsilon: 0.969\n",
            "Episode 2/500, Reward: -7.60, Epsilon: 0.889\n",
            "Episode 3/500, Reward: -10.00, Epsilon: 0.804\n",
            "Episode 4/500, Reward: -5.40, Epsilon: 0.753\n",
            "Episode 5/500, Reward: -10.00, Epsilon: 0.682\n",
            "Episode 6/500, Reward: -4.20, Epsilon: 0.646\n",
            "Episode 7/500, Reward: -2.90, Epsilon: 0.621\n",
            "Episode 8/500, Reward: -3.30, Epsilon: 0.594\n",
            "Episode 9/500, Reward: -2.90, Epsilon: 0.571\n",
            "Episode 10/500, Reward: -0.90, Epsilon: 0.560\n",
            "Episode 11/500, Reward: -2.30, Epsilon: 0.541\n",
            "Episode 12/500, Reward: -2.20, Epsilon: 0.523\n",
            "Episode 13/500, Reward: -1.50, Epsilon: 0.510\n",
            "Episode 14/500, Reward: -2.00, Epsilon: 0.494\n",
            "Episode 15/500, Reward: -1.80, Epsilon: 0.480\n",
            "Episode 16/500, Reward: -0.60, Epsilon: 0.472\n",
            "Episode 17/500, Reward: -0.50, Epsilon: 0.465\n",
            "Episode 18/500, Reward: -0.20, Epsilon: 0.459\n",
            "Episode 19/500, Reward: -0.70, Epsilon: 0.450\n",
            "Episode 20/500, Reward: -1.30, Epsilon: 0.440\n",
            "Episode 21/500, Reward: -1.20, Epsilon: 0.430\n",
            "Episode 22/500, Reward: -1.10, Epsilon: 0.420\n",
            "Episode 23/500, Reward: -0.70, Epsilon: 0.413\n",
            "Episode 24/500, Reward: -1.40, Epsilon: 0.403\n",
            "Episode 25/500, Reward: 0.00, Epsilon: 0.398\n",
            "Episode 26/500, Reward: -1.40, Epsilon: 0.388\n",
            "Episode 27/500, Reward: -0.90, Epsilon: 0.381\n",
            "Episode 28/500, Reward: -0.90, Epsilon: 0.373\n",
            "Episode 29/500, Reward: -0.20, Epsilon: 0.368\n",
            "Episode 30/500, Reward: -1.60, Epsilon: 0.359\n",
            "Episode 31/500, Reward: 0.10, Epsilon: 0.355\n",
            "Episode 32/500, Reward: -1.20, Epsilon: 0.347\n",
            "Episode 33/500, Reward: -0.60, Epsilon: 0.341\n",
            "Episode 34/500, Reward: -0.10, Epsilon: 0.337\n",
            "Episode 35/500, Reward: -0.50, Epsilon: 0.332\n",
            "Episode 36/500, Reward: -1.00, Epsilon: 0.325\n",
            "Episode 37/500, Reward: -0.90, Epsilon: 0.318\n",
            "Episode 38/500, Reward: -0.50, Epsilon: 0.313\n",
            "Episode 39/500, Reward: -0.20, Epsilon: 0.309\n",
            "Episode 40/500, Reward: -0.20, Epsilon: 0.305\n",
            "Episode 41/500, Reward: 0.10, Epsilon: 0.302\n",
            "Episode 42/500, Reward: -0.50, Epsilon: 0.297\n",
            "Episode 43/500, Reward: -0.40, Epsilon: 0.293\n",
            "Episode 44/500, Reward: -0.10, Epsilon: 0.289\n",
            "Episode 45/500, Reward: -0.30, Epsilon: 0.285\n",
            "Episode 46/500, Reward: -0.50, Epsilon: 0.281\n",
            "Episode 47/500, Reward: -0.10, Epsilon: 0.278\n",
            "Episode 48/500, Reward: -0.30, Epsilon: 0.274\n",
            "Episode 49/500, Reward: -0.30, Epsilon: 0.270\n",
            "Episode 50/500, Reward: -0.70, Epsilon: 0.265\n",
            "Episode 51/500, Reward: -0.40, Epsilon: 0.261\n",
            "Episode 52/500, Reward: -0.30, Epsilon: 0.258\n",
            "Episode 53/500, Reward: 0.00, Epsilon: 0.255\n",
            "Episode 54/500, Reward: 0.10, Epsilon: 0.252\n",
            "Episode 55/500, Reward: 0.10, Epsilon: 0.250\n",
            "Episode 56/500, Reward: 0.10, Epsilon: 0.247\n",
            "Episode 57/500, Reward: -0.20, Epsilon: 0.244\n",
            "Episode 58/500, Reward: -0.10, Epsilon: 0.241\n",
            "Episode 59/500, Reward: -0.20, Epsilon: 0.238\n",
            "Episode 60/500, Reward: 0.00, Epsilon: 0.235\n",
            "Episode 61/500, Reward: -0.30, Epsilon: 0.232\n",
            "Episode 62/500, Reward: -0.10, Epsilon: 0.229\n",
            "Episode 63/500, Reward: -0.30, Epsilon: 0.226\n",
            "Episode 64/500, Reward: -0.30, Epsilon: 0.223\n",
            "Episode 65/500, Reward: -0.10, Epsilon: 0.220\n",
            "Episode 66/500, Reward: 0.10, Epsilon: 0.218\n",
            "Episode 67/500, Reward: -0.20, Epsilon: 0.215\n",
            "Episode 68/500, Reward: 0.00, Epsilon: 0.213\n",
            "Episode 69/500, Reward: -0.60, Epsilon: 0.209\n",
            "Episode 70/500, Reward: -0.50, Epsilon: 0.206\n",
            "Episode 71/500, Reward: -0.40, Epsilon: 0.203\n",
            "Episode 72/500, Reward: -0.30, Epsilon: 0.200\n",
            "Episode 73/500, Reward: 0.10, Epsilon: 0.198\n",
            "Episode 74/500, Reward: -0.10, Epsilon: 0.196\n",
            "Episode 75/500, Reward: 0.00, Epsilon: 0.194\n",
            "Episode 76/500, Reward: -0.20, Epsilon: 0.191\n",
            "Episode 77/500, Reward: 0.00, Epsilon: 0.189\n",
            "Episode 78/500, Reward: -0.10, Epsilon: 0.187\n",
            "Episode 79/500, Reward: 0.10, Epsilon: 0.185\n",
            "Episode 80/500, Reward: -0.20, Epsilon: 0.183\n",
            "Episode 81/500, Reward: -0.10, Epsilon: 0.180\n",
            "Episode 82/500, Reward: 0.10, Epsilon: 0.179\n",
            "Episode 83/500, Reward: -0.20, Epsilon: 0.176\n",
            "Episode 84/500, Reward: -0.30, Epsilon: 0.174\n",
            "Episode 85/500, Reward: 0.10, Epsilon: 0.172\n",
            "Episode 86/500, Reward: 0.10, Epsilon: 0.170\n",
            "Episode 87/500, Reward: -0.10, Epsilon: 0.168\n",
            "Episode 88/500, Reward: -0.20, Epsilon: 0.166\n",
            "Episode 89/500, Reward: -0.10, Epsilon: 0.164\n",
            "Episode 90/500, Reward: -0.10, Epsilon: 0.162\n",
            "Episode 91/500, Reward: 0.10, Epsilon: 0.161\n",
            "Episode 92/500, Reward: 0.00, Epsilon: 0.159\n",
            "Episode 93/500, Reward: 0.10, Epsilon: 0.157\n",
            "Episode 94/500, Reward: -0.30, Epsilon: 0.155\n",
            "Episode 95/500, Reward: -0.30, Epsilon: 0.153\n",
            "Episode 96/500, Reward: 0.10, Epsilon: 0.151\n",
            "Episode 97/500, Reward: 0.00, Epsilon: 0.150\n",
            "Episode 98/500, Reward: 0.00, Epsilon: 0.148\n",
            "Episode 99/500, Reward: -0.10, Epsilon: 0.146\n",
            "Episode 100/500, Reward: -0.30, Epsilon: 0.144\n",
            "Episode 101/500, Reward: -0.20, Epsilon: 0.142\n",
            "Episode 102/500, Reward: -0.20, Epsilon: 0.141\n",
            "Episode 103/500, Reward: -0.10, Epsilon: 0.139\n",
            "Episode 104/500, Reward: 0.00, Epsilon: 0.137\n",
            "Episode 105/500, Reward: -0.10, Epsilon: 0.136\n",
            "Episode 106/500, Reward: 0.10, Epsilon: 0.134\n",
            "Episode 107/500, Reward: 0.10, Epsilon: 0.133\n",
            "Episode 108/500, Reward: -0.10, Epsilon: 0.131\n",
            "Episode 109/500, Reward: -0.30, Epsilon: 0.130\n",
            "Episode 110/500, Reward: 0.10, Epsilon: 0.128\n",
            "Episode 111/500, Reward: 0.00, Epsilon: 0.127\n",
            "Episode 112/500, Reward: -0.20, Epsilon: 0.125\n",
            "Episode 113/500, Reward: -0.50, Epsilon: 0.123\n",
            "Episode 114/500, Reward: -0.20, Epsilon: 0.122\n",
            "Episode 115/500, Reward: 0.10, Epsilon: 0.121\n",
            "Episode 116/500, Reward: -0.20, Epsilon: 0.119\n",
            "Episode 117/500, Reward: 0.00, Epsilon: 0.118\n",
            "Episode 118/500, Reward: 0.00, Epsilon: 0.116\n",
            "Episode 119/500, Reward: -0.60, Epsilon: 0.114\n",
            "Episode 120/500, Reward: 0.10, Epsilon: 0.113\n",
            "Episode 121/500, Reward: -0.10, Epsilon: 0.112\n",
            "Episode 122/500, Reward: 0.00, Epsilon: 0.111\n",
            "Episode 123/500, Reward: -0.20, Epsilon: 0.109\n",
            "Episode 124/500, Reward: 0.10, Epsilon: 0.108\n",
            "Episode 125/500, Reward: 0.10, Epsilon: 0.107\n",
            "Episode 126/500, Reward: -0.20, Epsilon: 0.106\n",
            "Episode 127/500, Reward: 0.10, Epsilon: 0.105\n",
            "Episode 128/500, Reward: -0.40, Epsilon: 0.103\n",
            "Episode 129/500, Reward: 0.10, Epsilon: 0.102\n",
            "Episode 130/500, Reward: -0.10, Epsilon: 0.101\n",
            "Episode 131/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 132/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 133/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 134/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 135/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 136/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 137/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 138/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 139/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 140/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 141/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 142/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 143/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 144/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 145/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 146/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 147/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 148/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 149/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 150/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 151/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 152/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 153/500, Reward: -0.40, Epsilon: 0.100\n",
            "Episode 154/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 155/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 156/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 157/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 158/500, Reward: -0.40, Epsilon: 0.100\n",
            "Episode 159/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 160/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 161/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 162/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 163/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 164/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 165/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 166/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 167/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 168/500, Reward: -0.30, Epsilon: 0.100\n",
            "Episode 169/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 170/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 171/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 172/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 173/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 174/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 175/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 176/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 177/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 178/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 179/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 180/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 181/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 182/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 183/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 184/500, Reward: -0.90, Epsilon: 0.100\n",
            "Episode 185/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 186/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 187/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 188/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 189/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 190/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 191/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 192/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 193/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 194/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 195/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 196/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 197/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 198/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 199/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 200/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 201/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 202/500, Reward: -0.30, Epsilon: 0.100\n",
            "Episode 203/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 204/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 205/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 206/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 207/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 208/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 209/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 210/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 211/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 212/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 213/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 214/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 215/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 216/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 217/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 218/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 219/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 220/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 221/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 222/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 223/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 224/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 225/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 226/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 227/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 228/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 229/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 230/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 231/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 232/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 233/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 234/500, Reward: -0.40, Epsilon: 0.100\n",
            "Episode 235/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 236/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 237/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 238/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 239/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 240/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 241/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 242/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 243/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 244/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 245/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 246/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 247/500, Reward: -0.30, Epsilon: 0.100\n",
            "Episode 248/500, Reward: -0.30, Epsilon: 0.100\n",
            "Episode 249/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 250/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 251/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 252/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 253/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 254/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 255/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 256/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 257/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 258/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 259/500, Reward: -0.40, Epsilon: 0.100\n",
            "Episode 260/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 261/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 262/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 263/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 264/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 265/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 266/500, Reward: -0.30, Epsilon: 0.100\n",
            "Episode 267/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 268/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 269/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 270/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 271/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 272/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 273/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 274/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 275/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 276/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 277/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 278/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 279/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 280/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 281/500, Reward: -0.40, Epsilon: 0.100\n",
            "Episode 282/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 283/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 284/500, Reward: -0.30, Epsilon: 0.100\n",
            "Episode 285/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 286/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 287/500, Reward: -0.30, Epsilon: 0.100\n",
            "Episode 288/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 289/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 290/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 291/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 292/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 293/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 294/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 295/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 296/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 297/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 298/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 299/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 300/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 301/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 302/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 303/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 304/500, Reward: -0.30, Epsilon: 0.100\n",
            "Episode 305/500, Reward: -0.30, Epsilon: 0.100\n",
            "Episode 306/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 307/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 308/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 309/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 310/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 311/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 312/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 313/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 314/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 315/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 316/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 317/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 318/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 319/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 320/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 321/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 322/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 323/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 324/500, Reward: -0.30, Epsilon: 0.100\n",
            "Episode 325/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 326/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 327/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 328/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 329/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 330/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 331/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 332/500, Reward: -0.30, Epsilon: 0.100\n",
            "Episode 333/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 334/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 335/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 336/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 337/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 338/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 339/500, Reward: -0.80, Epsilon: 0.100\n",
            "Episode 340/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 341/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 342/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 343/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 344/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 345/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 346/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 347/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 348/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 349/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 350/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 351/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 352/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 353/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 354/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 355/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 356/500, Reward: -0.30, Epsilon: 0.100\n",
            "Episode 357/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 358/500, Reward: -0.30, Epsilon: 0.100\n",
            "Episode 359/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 360/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 361/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 362/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 363/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 364/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 365/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 366/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 367/500, Reward: -0.40, Epsilon: 0.100\n",
            "Episode 368/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 369/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 370/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 371/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 372/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 373/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 374/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 375/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 376/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 377/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 378/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 379/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 380/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 381/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 382/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 383/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 384/500, Reward: -0.50, Epsilon: 0.100\n",
            "Episode 385/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 386/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 387/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 388/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 389/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 390/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 391/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 392/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 393/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 394/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 395/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 396/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 397/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 398/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 399/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 400/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 401/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 402/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 403/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 404/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 405/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 406/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 407/500, Reward: -0.40, Epsilon: 0.100\n",
            "Episode 408/500, Reward: -0.40, Epsilon: 0.100\n",
            "Episode 409/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 410/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 411/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 412/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 413/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 414/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 415/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 416/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 417/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 418/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 419/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 420/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 421/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 422/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 423/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 424/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 425/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 426/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 427/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 428/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 429/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 430/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 431/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 432/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 433/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 434/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 435/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 436/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 437/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 438/500, Reward: -2.80, Epsilon: 0.100\n",
            "Episode 439/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 440/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 441/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 442/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 443/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 444/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 445/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 446/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 447/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 448/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 449/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 450/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 451/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 452/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 453/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 454/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 455/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 456/500, Reward: -0.30, Epsilon: 0.100\n",
            "Episode 457/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 458/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 459/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 460/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 461/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 462/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 463/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 464/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 465/500, Reward: -0.30, Epsilon: 0.100\n",
            "Episode 466/500, Reward: -0.30, Epsilon: 0.100\n",
            "Episode 467/500, Reward: -3.00, Epsilon: 0.100\n",
            "Episode 468/500, Reward: -0.30, Epsilon: 0.100\n",
            "Episode 469/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 470/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 471/500, Reward: -0.30, Epsilon: 0.100\n",
            "Episode 472/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 473/500, Reward: -0.20, Epsilon: 0.100\n",
            "Episode 474/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 475/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 476/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 477/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 478/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 479/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 480/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 481/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 482/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 483/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 484/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 485/500, Reward: -0.10, Epsilon: 0.100\n",
            "Episode 486/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 487/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 488/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 489/500, Reward: -0.40, Epsilon: 0.100\n",
            "Episode 490/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 491/500, Reward: -0.50, Epsilon: 0.100\n",
            "Episode 492/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 493/500, Reward: 0.00, Epsilon: 0.100\n",
            "Episode 494/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 495/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 496/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 497/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 498/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 499/500, Reward: 0.10, Epsilon: 0.100\n",
            "Episode 500/500, Reward: 0.10, Epsilon: 0.100\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[-8.399999999999983,\n",
              " -7.599999999999985,\n",
              " -9.99999999999998,\n",
              " -5.399999999999993,\n",
              " -9.99999999999998,\n",
              " -4.1999999999999975,\n",
              " -2.900000000000002,\n",
              " -3.3000000000000007,\n",
              " -2.900000000000002,\n",
              " -0.9000000000000006,\n",
              " -2.3000000000000016,\n",
              " -2.2000000000000015,\n",
              " -1.5000000000000009,\n",
              " -2.0000000000000013,\n",
              " -1.8000000000000012,\n",
              " -0.6000000000000003,\n",
              " -0.5000000000000002,\n",
              " -0.19999999999999996,\n",
              " -0.7000000000000004,\n",
              " -1.3000000000000007,\n",
              " -1.2000000000000006,\n",
              " -1.1000000000000005,\n",
              " -0.7000000000000004,\n",
              " -1.4000000000000008,\n",
              " 1.1102230246251565e-16,\n",
              " -1.4000000000000008,\n",
              " -0.9000000000000006,\n",
              " -0.9000000000000006,\n",
              " -0.19999999999999996,\n",
              " -1.600000000000001,\n",
              " 0.10000000000000009,\n",
              " -1.2000000000000006,\n",
              " -0.6000000000000003,\n",
              " -0.09999999999999987,\n",
              " -0.5000000000000002,\n",
              " -1.0000000000000004,\n",
              " -0.9000000000000006,\n",
              " -0.5000000000000002,\n",
              " -0.19999999999999996,\n",
              " -0.19999999999999996,\n",
              " 0.10000000000000009,\n",
              " -0.5000000000000002,\n",
              " -0.40000000000000013,\n",
              " -0.09999999999999987,\n",
              " -0.30000000000000004,\n",
              " -0.5000000000000002,\n",
              " -0.09999999999999987,\n",
              " -0.30000000000000004,\n",
              " -0.30000000000000004,\n",
              " -0.7000000000000004,\n",
              " -0.40000000000000013,\n",
              " -0.30000000000000004,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.19999999999999996,\n",
              " -0.09999999999999987,\n",
              " -0.19999999999999996,\n",
              " 1.1102230246251565e-16,\n",
              " -0.30000000000000004,\n",
              " -0.09999999999999987,\n",
              " -0.30000000000000004,\n",
              " -0.30000000000000004,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " -0.19999999999999996,\n",
              " 1.1102230246251565e-16,\n",
              " -0.6000000000000003,\n",
              " -0.5000000000000002,\n",
              " -0.40000000000000013,\n",
              " -0.30000000000000004,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " -0.19999999999999996,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " -0.19999999999999996,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " -0.19999999999999996,\n",
              " -0.30000000000000004,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " -0.19999999999999996,\n",
              " -0.09999999999999987,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " -0.30000000000000004,\n",
              " -0.30000000000000004,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " -0.30000000000000004,\n",
              " -0.19999999999999996,\n",
              " -0.19999999999999996,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " -0.30000000000000004,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " -0.19999999999999996,\n",
              " -0.5000000000000002,\n",
              " -0.19999999999999996,\n",
              " 0.10000000000000009,\n",
              " -0.19999999999999996,\n",
              " 1.1102230246251565e-16,\n",
              " 1.1102230246251565e-16,\n",
              " -0.6000000000000003,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " -0.19999999999999996,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.19999999999999996,\n",
              " 0.10000000000000009,\n",
              " -0.40000000000000013,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " -0.19999999999999996,\n",
              " -0.19999999999999996,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " -0.19999999999999996,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.40000000000000013,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " -0.40000000000000013,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.19999999999999996,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.30000000000000004,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " -0.9000000000000006,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " 1.1102230246251565e-16,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.30000000000000004,\n",
              " 1.1102230246251565e-16,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " -0.09999999999999987,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " -0.19999999999999996,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " -0.40000000000000013,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " -0.30000000000000004,\n",
              " -0.30000000000000004,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " -0.40000000000000013,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " -0.19999999999999996,\n",
              " 0.10000000000000009,\n",
              " -0.19999999999999996,\n",
              " -0.30000000000000004,\n",
              " 1.1102230246251565e-16,\n",
              " 1.1102230246251565e-16,\n",
              " 1.1102230246251565e-16,\n",
              " 1.1102230246251565e-16,\n",
              " -0.19999999999999996,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.19999999999999996,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " -0.40000000000000013,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " -0.30000000000000004,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " -0.30000000000000004,\n",
              " 0.10000000000000009,\n",
              " -0.19999999999999996,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 1.1102230246251565e-16,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " -0.30000000000000004,\n",
              " -0.30000000000000004,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " -0.30000000000000004,\n",
              " -0.19999999999999996,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " -0.09999999999999987,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " -0.30000000000000004,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " -0.8000000000000005,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " -0.19999999999999996,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " -0.19999999999999996,\n",
              " -0.30000000000000004,\n",
              " 0.10000000000000009,\n",
              " -0.30000000000000004,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " -0.40000000000000013,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " -0.19999999999999996,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.19999999999999996,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " -0.19999999999999996,\n",
              " -0.5000000000000002,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " -0.09999999999999987,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " -0.40000000000000013,\n",
              " -0.40000000000000013,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " -0.19999999999999996,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " -0.09999999999999987,\n",
              " 1.1102230246251565e-16,\n",
              " 1.1102230246251565e-16,\n",
              " -2.800000000000002,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.19999999999999996,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.30000000000000004,\n",
              " 1.1102230246251565e-16,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " -0.09999999999999987,\n",
              " -0.30000000000000004,\n",
              " -0.30000000000000004,\n",
              " -3.0000000000000018,\n",
              " -0.30000000000000004,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " -0.30000000000000004,\n",
              " 1.1102230246251565e-16,\n",
              " -0.19999999999999996,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " -0.09999999999999987,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " -0.40000000000000013,\n",
              " 0.10000000000000009,\n",
              " -0.5000000000000002,\n",
              " 0.10000000000000009,\n",
              " 1.1102230246251565e-16,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009,\n",
              " 0.10000000000000009]"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"\\nEvaluating the agent...\")\n",
        "evaluate_dqn(model_path='dqn_model.weights.h5')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "NY-HXxX9SN-2",
        "outputId": "9a92962b-12ab-4cee-df0b-8582b02b646a"
      },
      "id": "NY-HXxX9SN-2",
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Evaluating the agent...\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/keras/src/saving/saving_lib.py:757: UserWarning: Skipping variable loading for optimizer 'loss_scale_optimizer', because it has 4 variables whereas the saved optimizer has 18 variables. \n",
            "  saveable.load_own_variables(weights_store.get(inner_path))\n",
            "/usr/local/lib/python3.11/dist-packages/keras/src/saving/saving_lib.py:757: UserWarning: Skipping variable loading for optimizer 'adam', because it has 2 variables whereas the saved optimizer has 14 variables. \n",
            "  saveable.load_own_variables(weights_store.get(inner_path))\n",
            "<ipython-input-2-c8ecc4489373>:57: MatplotlibDeprecationWarning: The get_cmap function was deprecated in Matplotlib 3.7 and will be removed in 3.11. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap()`` or ``pyplot.get_cmap()`` instead.\n",
            "  cmap = plt.cm.get_cmap('gray', 4)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Episode 1:\n",
            "Path: [(0, 0), (0, 1), (0, 2), (1, 2), (2, 2), (2, 3), (2, 4), (3, 4), (4, 4), (4, 5), (5, 5)]\n",
            "Path Length: 11\n",
            "Total Reward: 0.10\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Episode 2:\n",
            "Path: [(0, 0), (0, 1), (0, 2), (1, 2), (2, 2), (2, 3), (2, 4), (3, 4), (4, 4), (4, 5), (5, 5)]\n",
            "Path Length: 11\n",
            "Total Reward: 0.10\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAfQAAAIQCAYAAAB365yDAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAMHJJREFUeJzt3Xl0VHWC9vGnkpAFklQkSDAksoNCCzSydAQPCrQcmtUeATkgy6D9inEBZBppF0BfG6ZdgHEYQG0BR1EWJfrK1khLaGwQBMMAzWqDJmwxOKkskJDlvn8UlMQQSCVVdZNfvh/PPVq37q37cAWe/O5WDsuyLAEAgFotyO4AAACg+ih0AAAMQKEDAGAACh0AAANQ6AAAGIBCBwDAABQ6AAAGoNABADAAhQ4AgAEodKCWmzVrlhwOR0C3efLkSTkcDi1btiyg2wVQMQodCKBly5bJ4XBUOO3cudPuiLaZMmWKunTpooYNG6p+/fq6/fbbNWvWLOXl5dkdDagVQuwOANRFL774olq0aFFufuvWrb3+rOeee07PPPOML2LZavfu3br77rs1YcIEhYeH65tvvtHcuXP1+eefa9u2bQoKYvwBXA+FDthgwIAB6tq1q08+KyQkRCEhtf+P8vbt28vNa9WqlaZNm6Zdu3bpV7/6lQ2pgNqDH3mBGujKOepXX31V8+bNU7NmzRQREaHevXvrwIEDZZa91jn0zZs3q1evXoqJiVFkZKTatWunP/zhD2WWyczM1MSJExUXF6fw8HB16tRJy5cvL5clOztb48ePl9PpVExMjMaNG6fs7Oxr5j58+LAeeOABNWzYUOHh4eratas+/fTTKu+H5s2bezIAuL7a/2M9UAu5XC5lZWWVmedwOBQbG1tm3rvvvqvc3FwlJyeroKBACxYsUJ8+fbR//37FxcVd87MPHjyoQYMGqWPHjnrxxRcVFham48eP68svv/Qsc/HiRd1zzz06fvy4Hn/8cbVo0UKrV6/W+PHjlZ2draeeekqSZFmWhg4dqu3bt+vRRx/V7bffrrVr12rcuHHX3G7Pnj3VtGlTPfPMM2rQoIFWrVqlYcOG6aOPPtL9999/w/1SXFys7OxsXbp0SQcOHNBzzz2nqKgode/e/YbrAnWeBSBgli5dakm65hQWFuZZ7sSJE5YkKyIiwsrIyPDM/+qrryxJ1pQpUzzzZs6caV39R3nevHmWJOuHH36oMMf8+fMtSdZ7773nmXfp0iUrKSnJioyMtHJycizLsqyUlBRLkvWnP/3Js1xxcbF19913W5KspUuXeub37dvXuuOOO6yCggLPvNLSUuuuu+6y2rRpU6n9s2PHjjL7pF27dtYXX3xRqXWBuo5D7oANFi5cqM2bN5eZNmzYUG65YcOGqWnTpp7X3bt3V48ePbR+/foKPzsmJkaS9Mknn6i0tPSay6xfv15NmjTRqFGjPPPq1aunJ598Unl5eUpNTfUsFxISokmTJnmWCw4O1hNPPFHm83788Uf99a9/1YgRI5Sbm6usrCxlZWXp/Pnz6t+/v44dO6ZTp07dcL+0b99emzdvVkpKin7/+9+rQYMGXOUOVBKH3AEbdO/evVIXxbVp06bcvLZt22rVqlUVrjNy5Ei9/fbbevjhh/XMM8+ob9+++u1vf6sHHnjAc6X4d999pzZt2pS7cvz222/3vH/l37fccosiIyPLLNeuXbsyr48fPy7LsvT888/r+eefv2auzMzMMj+cXEt0dLT69esnSRo6dKhWrFihoUOHau/everUqdN11wXqOgodMExERIS2bdumL774QuvWrdPGjRu1cuVK9enTR3/5y18UHBzs821eORIwbdo09e/f/5rLVOWWvN/+9rd66KGH9OGHH1LowA1Q6EANduzYsXLzjh496rn6uyJBQUHq27ev+vbtq9dff11//OMf9eyzz+qLL75Qv3791KxZM/3P//yPSktLy4zSDx8+LElq1qyZ599btmxRXl5emVH6kSNHymyvZcuWktyH7a+MsH2hsLBQpaWlcrlcPvtMwFScQwdqsJSUlDLnnnft2qWvvvpKAwYMqHCdH3/8sdy8zp07S3IXpCT95je/0dmzZ7Vy5UrPMsXFxXrjjTcUGRmp3r17e5YrLi7WokWLPMuVlJTojTfeKPP5jRs31j333KMlS5bozJkz5bb/ww8/XPfXmZ2draKionLz3377bUny2T37gMkYoQM22LBhg2c0fLW77rrLM9qV3Iepe/XqpUmTJqmwsFDz589XbGysfv/731f42S+++KK2bdumgQMHqlmzZsrMzNR//dd/KSEhQb169ZIk/e53v9OSJUs0fvx47dmzR82bN9eaNWv05Zdfav78+YqKipIkDR48WD179tQzzzyjkydPqn379vr444+vOWJeuHChevXqpTvuuEOPPPKIWrZsqXPnzmnHjh3KyMjQvn37Ksy8detWPfnkk3rggQfUpk0bXbp0SX/729/08ccfq2vXrhozZkyl9y1QZ9l9mT1Ql1zvtjVddRvYldvWXnnlFeu1116zEhMTrbCwMOvuu++29u3bV+Yzf37b2pYtW6yhQ4da8fHxVmhoqBUfH2+NGjXKOnr0aJn1zp07Z02YMMFq1KiRFRoaat1xxx1lbkO74vz589ZDDz1kRUdHW06n03rooYesb775ptxta5ZlWd9++601duxYq0mTJla9evWspk2bWoMGDbLWrFlz3f1y/Phxa+zYsVbLli2tiIgIKzw83OrQoYM1c+ZMKy8vr/I7GKjDHJZlWXb9MAHg2k6ePKkWLVrolVde0bRp0+yOA6AW4Bw6AAAGoNABADAAhQ4AgAE4hw4AgAEYoQMAYAAKHQAAAwT8wTKlpaU6ffq0oqKi5HA4Ar15AABqFcuylJubq/j4+HJfqHS1gBf66dOnlZiYGOjNAgBQq6WnpyshIaHC9wNe6FceKblo0SJFREQEevO11vjx4+2OAACw0ZX+rEjAC/3KYfaIiAjVr18/0JsHAKBWutFpai6KAwDAABQ6AAAGoNABADAA34cOAKiykJAQ3XLLLde9nQoVsyxLWVlZunDhQrU/i0IHAFRJ48aN9eqrr6pRo0Y8V6SKLMvSpUuX9Omnn2rp0qWqztPYKXQAgNccDoceffRRtWjRQuHh4XbHqfVGjRolSXrnnXeq/BkcIwEAeC0mJkZdu3alzH0kJiZGQ4YMqdbt3BQ6AMBrUVFRCgnhIK8vhYaGqlGjRlVen/8bAACvORwOn5w3tyxLriKXLhRfUP2Q+nLWc9bZ8/HV3acUOgAg4HKLcvVZxmdadXKVMi5keOYn1E/QiOYjNChhkKLqXf9RpyiLQ+4AgIDa8cMODdwyUPP+MU+nLpwq896pC6c07x/zNHDLQO34YYdNCWsnCh0AEDA7ftihybsmq6CkQNblf652ZV5BSYEm75rsl1L/3//9X82dO1eDBg3SXXfdpf79++uJJ57Qvn37JEndunXT1q1bfbKt06dPq1u3bjpy5IhPPu96OOQOAAiI3KJcTd8z/ZpF/nNX3p++Z7rW9V3n08Pv06dPV1FRkWbNmqWmTZvqxx9/1K5du5Sdne2zbUhSUVGRTz/vRih0AEBAfJbxmWdkXhlXRurrMtbpwRYP+iRDbm6uvvnmGy1evFh33nmnJOmWW25Rhw4dJElDhgyRJP3bv/2b571PP/1UGRkZmjdvng4cOKCLFy+qefPmSk5OVo8ePTyfPWTIEA0ZMkTp6elKTU3VPffco3Xr1kmSxowZI0nq0qWLlixZ4pNfy89R6AAAv7MsS6tOrqrSuitPrtTI5iN9cvX7la/uTk1N1R133KHQ0NAy7y9fvlz33XefXnjhBSUlJSk4OFiSdOHCBfXs2VOTJk1SaGio1q1bp6efflpr1qxRkyZNPOu/9957evjhh/XII49IkoYPH67x48dr4cKFatmyperVq1ftX0NFKHQAgN+5ilxlrmavLEuWMi5kyFXkUkxoTLVzhISEaObMmXr55Zf18ccfq127durSpYvuu+8+tWnTRjfddJMk9332V98T3rZtW7Vt29bzetKkSdq6dau2bdumESNGeOZ369bNMxqX5HnGvdPprNY95pX6tfn10wEAkHShuHpfPnKh+IJPCl2S+vTpo549eyotLU379+/X3//+d/33f/+3nn32WQ0ePPja279wQW+++aa+/PJLZWVlqaSkRIWFhTp79myZ5W6//XafZKwKrnIHAPhd/ZCqP9LUF+v/XFhYmHr06KGHH35Y77zzjgYNGqQ333yzwuUXLFigrVu36rHHHtNbb72l999/X61atSp34Zudj8Kl0AEAfues51RC/QQ55N15cIccSqifIGc9p5+SubVo0UIXL16U5D4sX1paWub9ffv2adCgQbr33nvVunVrxcbG6syZMzf83CvnzH/+ef5AoQMA/M7hcGhE8xE3XvAafHVBnCRlZ2dr0qRJWr9+vY4dO6ZTp07p888/17vvvqvevXtLkuLj47Vr1y5lZWUpJydHkpSYmKgvvvhCR44c0dGjR/Xcc89V6qtOb7rpJoWFhWnHjh06f/688vLyfPLruBbOoQMAAmJQwiAtOrKo0reuBSlIYcFhGpgw0GcZ6tevrw4dOuiDDz5QRkaGiouLFRcXp2HDhmnChAmSpKeeekrz589XSkqKGjdurE8//VRTpkzRSy+9pIkTJyomJkZjx45Vfn7+DbcXEhKiadOm6e2339aSJUvUuXNnv9225rCq823qVZCTkyOn06lly5ZV62vi6pqrr6IEALs1a9ZMixcv9vrK7StP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+Hi1bNlSo0eP1vfff293pCoJ+Jez1DRZWVkqKSlRXFxcmflxcXE6fPiwTalgstLSUk2ePFk9e/bUL37xC7vj1Gj79+9XUlKSCgoKFBkZqbVr16p9+/Z2x6qxPvzwQ+3du1e7d++2O0qt0aNHDy1btkzt2rXTmTNnNHv2bN199906cOCAoqKi7I7nlTpf6ECgJScn68CBA7X3PF0AtWvXTmlpaXK5XFqzZo3GjRun1NRUSv0a0tPT9dRTT2nz5s0KDw+3O06tMWDAAM9/d+zYUT169FCzZs20atUqTZw40cZk3qvzhd6oUSMFBwfr3LlzZeafO3dOTZo0sSkVTPX444/rs88+07Zt22r01wjXFKGhoWrdurUk6c4779Tu3bu1YMECLVmyxOZkNc+ePXuUmZmpLl26eOaVlJRo27Zt+s///E8VFhYqODjYxoS1Q0xMjNq2bavjx4/bHcVrdf4cemhoqO68805t2bLFM6+0tFRbtmzhXB18xrIsPf7441q7dq3++te/qkWLFnZHqpVKS0tVWFhod4waqW/fvtq/f7/S0tI8U9euXTV69GilpaVR5pWUl5enb7/9VrfccovdUbxW50fokjR16lSNGzdOXbt2Vffu3TV//nzl5+drwoQJdkerkfLy8sr89HrixAmlpaWpYcOGuvXWW21MVnMlJydrxYoV+uSTTxQVFaWzZ89KkpxOpyIiImxOVzPNmDFDAwYM0K233qrc3FytWLFCW7du1aZNm+yOViNFRUWVuyajQYMGio2N5VqN65g2bZoGDx6sZs2a6fTp05o5c6aCg4M1atQou6N5jUKXNHLkSP3www964YUXdPbsWXXu3FkbN24sd6Ec3L7++mvde++9ntdTp06VJI0bN07Lli2zKVXNtmjRIknSPffcU2b+0qVLNX78+MAHqgUyMzM1duxYnTlzRk6nUx07dtSmTZv061//2u5oMEhGRoZGjRql8+fP6+abb1avXr20c+dO3XzzzXZH8xpfnwoAgAHq/Dl0AABMQKEDAGAACh0AAANQ6AAAGIBCBwDAABQ6AAAGoNABADAAhQ4AgAEodAAADEChAwBgAAodAAADUOgAABjg/wPRd5Ko3UyGngAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Episode 3:\n",
            "Path: [(0, 0), (0, 1), (0, 2), (1, 2), (2, 2), (2, 3), (2, 4), (3, 4), (4, 4), (4, 5), (5, 5)]\n",
            "Path Length: 11\n",
            "Total Reward: 0.10\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Episode 4:\n",
            "Path: [(0, 0), (0, 1), (0, 2), (1, 2), (2, 2), (2, 3), (2, 4), (3, 4), (4, 4), (4, 5), (5, 5)]\n",
            "Path Length: 11\n",
            "Total Reward: 0.10\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Episode 5:\n",
            "Path: [(0, 0), (0, 1), (0, 2), (1, 2), (2, 2), (2, 3), (2, 4), (3, 4), (4, 4), (4, 5), (5, 5)]\n",
            "Path Length: 11\n",
            "Total Reward: 0.10\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Episode 6:\n",
            "Path: [(0, 0), (0, 1), (0, 2), (1, 2), (2, 2), (2, 3), (2, 4), (3, 4), (4, 4), (4, 5), (5, 5)]\n",
            "Path Length: 11\n",
            "Total Reward: 0.10\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Episode 7:\n",
            "Path: [(0, 0), (0, 1), (0, 2), (1, 2), (2, 2), (2, 3), (2, 4), (3, 4), (4, 4), (4, 5), (5, 5)]\n",
            "Path Length: 11\n",
            "Total Reward: 0.10\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Episode 8:\n",
            "Path: [(0, 0), (0, 1), (0, 2), (1, 2), (2, 2), (2, 3), (2, 4), (3, 4), (4, 4), (4, 5), (5, 5)]\n",
            "Path Length: 11\n",
            "Total Reward: 0.10\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Episode 9:\n",
            "Path: [(0, 0), (0, 1), (0, 2), (1, 2), (2, 2), (2, 3), (2, 4), (3, 4), (4, 4), (4, 5), (5, 5)]\n",
            "Path Length: 11\n",
            "Total Reward: 0.10\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Episode 10:\n",
            "Path: [(0, 0), (0, 1), (0, 2), (1, 2), (2, 2), (2, 3), (2, 4), (3, 4), (4, 4), (4, 5), (5, 5)]\n",
            "Path Length: 11\n",
            "Total Reward: 0.10\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.12.3"
    },
    "colab": {
      "provenance": [],
      "gpuType": "T4",
      "include_colab_link": true
    },
    "accelerator": "GPU"
  },
  "nbformat": 4,
  "nbformat_minor": 5
}
